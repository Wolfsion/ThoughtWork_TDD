/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Poker;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }

    // 判断手牌种类的测试
    @Test void cardPowerShouldReturn0() {
        Poker testCase = new Poker();
        Integer power = testCase.cardPower("2H 3D 5S 9C KD");
        Assertions.assertEquals(0, power);
    }

    @Test void cardPowerShouldReturn1() {
        Poker testCase = new Poker();
        Integer power = testCase.cardPower("2H 4S 5C 3D 4H");
        Assertions.assertEquals(1, power);
    }

    @Test void cardPowerShouldReturn2() {
        Poker testCase = new Poker();
        Integer power = testCase.cardPower("2H 4S 4C 2D AH");
        Assertions.assertEquals(2, power);
    }

    @Test void cardPowerShouldReturn3() {
        Poker testCase = new Poker();
        Integer power = testCase.cardPower("2H 4S 4C 4D AH");
        Assertions.assertEquals(3, power);
    }

    @Test void cardPowerShouldReturn4() {
        Poker testCase = new Poker();
        Integer power = testCase.cardPower("2S 3C 4D 5C 6D");
        Assertions.assertEquals(4, power);
    }

    @Test void cardPowerShouldReturn5() {
        Poker testCase = new Poker();
        Integer power = testCase.cardPower("2H 2H 7H 8H 9H");
        Assertions.assertEquals(5, power);
    }

    @Test void cardPowerShouldReturn6() {
        Poker testCase = new Poker();
        Integer power = testCase.cardPower("3S 4S 5S 6S 7S");
        Assertions.assertEquals(6, power);
    }

    // 比较函数手牌大小的测试
    // 题目要求用例
    @Test void compareTestCaseWhiteWin1() {
        Poker testCase = new Poker();
        String realResult = testCase.compare("2H 3D 5S 9C KD", "2C 3H 4S 8C AH");
        Assertions.assertEquals("White wins" ,realResult);
    }

    @Test void compareTestCaseWhiteWin2() {
        Poker testCase = new Poker();
        String realResult = testCase.compare("2H 4S 4C 2D 4H", "2S 8S AS QS 3S");
        Assertions.assertEquals("White wins" ,realResult);
    }

    @Test void compareTestCaseBlackWin1() {
        Poker testCase = new Poker();
        String realResult = testCase.compare("2H 3H 5H 9H KH", "2C 3H 4S 5C 6H");
        Assertions.assertEquals("Black wins" ,realResult);
    }

    @Test void compareTestCaseTie1() {
        Poker testCase = new Poker();
        String realResult = testCase.compare("2H 3D 5S 9C KD", "2D 3H 5C 9S KH");
        Assertions.assertEquals("Tie" ,realResult);
    }

    // 附加测试用例
    @Test void compareTestCaseWhiteWin3() {
        Poker testCase = new Poker();
        String realResult = testCase.compare("2H 4S 4C 3D 4H", "2S 4S 4S QS 4S");
        Assertions.assertEquals("White wins" ,realResult);
    }

    @Test void compareTestCaseWhiteWin4() {
        Poker testCase = new Poker();
        String realResult = testCase.compare("2H 4S 4C 6D 6H", "KD 4S 4S 6S 6S");
        Assertions.assertEquals("White wins" ,realResult);
    }

    @Test void compareTestBlackWin2() {
        Poker testCase = new Poker();
        String realResult = testCase.compare("KH 4S 4C 6D 6H", "2S 4S 4D 6H 6S");
        Assertions.assertEquals("Black wins" ,realResult);
    }
}
